{"version":3,"file":"component---src-pages-index-js-39d05778ce5d288f20b8.js","mappings":"gQAIMA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,gBAACC,EAAD,CAAeC,GAAG,OAAOC,UAAU,+BACjC,uBAAKA,UAAU,+BACb,uBAAKA,UAAU,+CACZH,EAAKI,MAAMC,KAAI,SAACC,GAAD,OACd,uBAAKC,IAAKD,EAAKE,KAAKC,MAAON,UAAU,uBACnC,uBAAKA,UAAU,qFACb,wBACE,eAAc,SAAWG,EAAKE,KAAKE,KAAO,gBAG9C,0BAAKJ,EAAKE,KAAKC,OACf,sBAAIN,UAAU,WACXG,EAAKE,KAAKG,KAAKN,KAAI,SAACO,GAAD,OAClB,sBAAIL,IAAKK,GACP,wBACE,eAAa,wBACbT,UAAU,0BAEXS,eAWbX,EAAgBY,EAAAA,GAAAA,QAAH,2RAkCnB,EAnBe,SAACC,GAAD,OACb,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAaLC,OAAQ,SAACjB,GAAD,OAAU,gBAACD,EAAD,eAAMC,KAAMA,EAAKkB,aAAiBJ,Q,UC3DlDK,EAAW,SAAC,GAAD,IAAGnB,EAAH,EAAGA,KAAH,OACf,gBAAC,EAAD,CACEE,GAAG,WACHC,UAAU,mDAEV,uBAAKA,UAAU,+BACb,sBAAIA,UAAU,sBAAd,YACA,uBAAKA,UAAU,oEACZH,EAAKI,MAAMC,KAAI,SAACC,GAAD,OACd,uBAAKC,IAAKD,EAAKE,KAAKY,IAAKjB,UAAU,iBACjC,uBAAK,oBAAkB,uDACrB,uBAAKA,UAAU,uBACb,qBACE,iBAAgB,YAAcG,EAAKE,KAAKY,IACxCjB,UAAU,oBACVkB,KAAM,IAAMf,EAAKE,KAAKY,KAEtB,uBAAKE,MAAO,CAAEC,SAAU,aACtB,gBAAC,EAAAC,EAAD,CACEC,MAAOnB,EAAKE,KAAKkB,QAAQC,gBAAgBC,gBACzCC,IAAKvB,EAAKE,KAAKY,MAEjB,uBAAKjB,UAAU,iHACb,qBAAGA,UAAU,mCACVG,EAAKE,KAAKC,YAOvB,gBAACqB,EAAD,CAAcC,QAASzB,EAAKE,eAQlCsB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,gBAACC,EAAD,CAAa9B,GAAI6B,EAAQX,IAAK,oBAC5B,uBAAKjB,UAAU,mBACb,0BACEA,UAAU,yBACV,aAAW,cACX8B,KAAK,SACL,qBAEF,uBAAK9B,UAAU,mBACZ4B,EAAQG,SACP,sBAAI/B,UAAU,kBAAkB4B,EAAQG,UAG5C,uBAAK/B,UAAU,gBAAgB,4BAC7B,sBAAIA,UAAU,WACX4B,EAAQI,WAAW9B,KAAI,SAACO,GAAD,OACtB,sBAAIL,IAAKK,GACP,wBACE,eAAa,wBACbT,UAAU,0BAEXS,OAINmB,EAAQK,YACPL,EAAQK,WAAW/B,KAAI,SAACgC,GAAD,OACrB,8BAAY9B,IAAK8B,EAAUC,OAAQC,KAAK,KACtC,qBAAGpC,UAAU,0BAA0BkC,EAAUzB,MACjD,8BAASyB,EAAUC,YAGzB,uBAAKnC,UAAU,gCAAf,aAMF6B,EAAcnB,EAAAA,GAAAA,IAAH,+KAUXZ,EAAgBY,EAAAA,GAAAA,QAAH,sBA+BnB,EA7BmB,SAACC,GAAD,OACjB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAuBLC,OAAQ,SAACjB,GAAD,OAAU,gBAACmB,EAAD,eAAUnB,KAAMA,EAAKwC,iBAAqB1B,QCpH1D2B,EAAe,SAAC,GAAD,IAAGzC,EAAH,EAAGA,KAAH,OACnB,gBAAC,EAAD,CAAeE,GAAG,eAAeC,UAAU,+BACzC,uBAAKA,UAAU,mDACb,0CACCH,EAAKI,MAAMC,KAAI,SAACC,GAAD,OACd,uBACEC,IAAKD,EAAKE,KAAKkC,KACfvC,UAAU,yCAEV,uBAAKA,UAAU,gCAAgCG,EAAKE,KAAKI,MACzD,yBAAIN,EAAKE,KAAKkC,aAOlBzC,EAAgBY,EAAAA,GAAAA,QAAH,udA8CnB,EArBmB,SAACC,GAAD,OACjB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAaLC,OAAQ,SAACjB,GAAD,OACN,gBAACyC,EAAD,eAAczC,KAAMA,EAAK2C,qBAAyB7B,QCzDlD8B,EAAY,SAAC,GAAD,IAAG5C,EAAH,EAAGA,KAAH,OAChB,gBAAC,EAAD,CAAeE,GAAG,YAAYC,UAAU,+BACtC,uBAAKA,UAAU,+BACZH,EAAKI,MAAMC,KAAI,SAACC,GAAD,OACd,gBAAC,EAAAkB,EAAD,CACEjB,IAAKD,EAAKE,KAAKkC,KACfjB,MACEnB,EAAKE,KAAKkB,QAAQC,gBAAgBC,gBAEpCC,IAAKvB,EAAKE,KAAKkC,KACfG,OAAO,eAOX5C,EAAgBY,EAAAA,GAAAA,QAAH,+FAgCnB,EAxBoB,SAACC,GAAD,OAClB,gBAAC,EAAAC,YAAD,CACEC,MAAK,YAgBLC,OAAQ,SAACjB,GAAD,OACN,gBAAC4C,EAAD,eAAW5C,KAAMA,EAAK8C,kBAAsBhC,QC5C5CiC,EAAe,SAAC,GAAD,IAAG/C,EAAH,EAAGA,KAAH,OACnB,gBAAC,EAAD,CAAeE,GAAG,eAAeC,UAAU,cACzC,uBAAKA,UAAU,gBACb,sBAAIA,UAAU,qCAAd,gBACA,uBAAK,iBAAe,2CAClB,uBAAKA,UAAU,uBAAuB6C,SAAS,MAC7C,uBAAK7C,UAAU,uBACb,sBAAIA,UAAU,mEACXH,EAAKI,MAAMC,KAAI,SAACC,GAAD,OACd,sBAAIC,IAAKD,EAAKE,KAAKC,OACjB,uBAAKN,UAAU,0CACb,uBAAKA,UAAU,qBACb,gBAAC,EAAAqB,EAAD,CACEC,MACEnB,EAAKE,KAAKkB,QAAQC,gBAAgBC,gBAEpCC,IAAKvB,EAAKE,KAAKC,MACfoC,OAAO,WAGX,uBAAK1C,UAAU,gBACb,sBAAIA,UAAU,iBAAiBG,EAAKE,KAAKC,QACtCH,EAAKE,KAAKyC,WAAa,wBAAM9C,UAAU,gBAAhB,0BAOtC,qBACEA,UAAU,4CACVkB,KAAK,YACL6B,IAAI,oBACJ,+BACA,sBAAoB,WACpB,aAAW,YAEX,yCAEF,qBACE/C,UAAU,6CACVkB,KAAK,QACL6B,IAAI,oBACJ,2BACA,sBAAoB,OACpB,aAAW,QAEX,0CAQNjD,EAAgBY,EAAAA,GAAAA,QAAH,6IAmCnB,EAzBuB,SAACC,GAAD,OACrB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAiBLC,OAAQ,SAACjB,GAAD,OACN,gBAAC+C,EAAD,eAAc/C,KAAMA,EAAKmD,qBAAyBrC,QCjElDb,EAAgBY,EAAAA,GAAAA,QAAH,0ZA0BnB,EAhDgB,WAOd,OACE,gBAAC,EAAD,CACEX,GAAG,UACHC,UAAU,0CAEV,uBAAKA,UAAU,+BACb,0BAAQiD,QAZI,SAACC,GACjB,IAAMC,EAASD,EAAEE,OACXC,EAAOH,EAAEE,OAAOE,YACtBH,EAAOhC,MAAMoC,QAAU,OACvBF,EAAKlC,MAAMoC,QAAU,UAQjB,WACA,4BACE,qBAAGrC,KAAK,gCAAR,6BCOV,EAbkB,kBAChB,gBAAC,IAAD,CAAesC,QAAM,GACnB,gBAAC,IAAD,CAAKlD,MAAM,OAAOmD,SAAU,CAAC,SAAD,yBAC5B,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,MAEA,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD","sources":["webpack://gatsby-starter-default/./src/components/usps.js","webpack://gatsby-starter-default/./src/components/projects.js","webpack://gatsby-starter-default/./src/components/testimonials.js","webpack://gatsby-starter-default/./src/components/techstack.js","webpack://gatsby-starter-default/./src/components/certificates.js","webpack://gatsby-starter-default/./src/components/contact.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst Usps = ({ data }) => (\n  <StyledSection id=\"usps\" className=\"uk-section uk-section-muted\">\n    <div className=\"uk-container uk-text-center\">\n      <div className=\"uk-grid uk-child-width-1-3@m uk-text-center\">\n        {data.edges.map((edge) => (\n          <div key={edge.node.title} className=\"uk-animation-toggle\">\n            <div className=\"usp-icon uk-box-shadow-small uk-border-circle uk-animation-scale-up uk-margin-top\">\n              <span\n                data-uk-icon={\"icon: \" + edge.node.icon + \"; ratio: 4\"}\n              ></span>\n            </div>\n            <h4>{edge.node.title}</h4>\n            <ul className=\"uk-list\">\n              {edge.node.list.map((text) => (\n                <li key={text}>\n                  <span\n                    data-uk-icon=\"icon: check; ratio: 1\"\n                    className=\"uk-margin-small-right\"\n                  ></span>\n                  {text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  </StyledSection>\n)\n\nconst StyledSection = styled.section`\n  .usp-icon {\n    height: 120px;\n    width: 120px;\n    display: inline-block;\n  }\n  .usp-icon [data-uk-icon] {\n    margin-top: 20px;\n  }\n  li .uk-icon:not(.uk-preserve) [stroke*=\"#\"]:not(.uk-preserve) {\n    stroke: green;\n    stroke-width: 2;\n  }\n`\n\nconst MyUsps = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allUspsJson {\n          edges {\n            node {\n              list\n              title\n              icon\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <Usps data={data.allUspsJson} {...props} />}\n  />\n)\n\nexport default MyUsps\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Projects = ({ data }) => (\n  <StyledSection\n    id=\"projects\"\n    className=\"uk-section background-primary to-right uk-light\"\n  >\n    <div className=\"uk-container uk-text-center\">\n      <h2 className=\"uk-heading-divider\">Projects</h2>\n      <div className=\"uk-grid uk-child-width-1-1@s uk-child-width-1-3@m uk-text-center\">\n        {data.edges.map((edge) => (\n          <div key={edge.node._id} className=\"uk-margin-top\">\n            <div data-uk-scrollspy=\"cls: uk-animation-slide-bottom-medium; repeat: true\">\n              <div className=\"uk-animation-toggle\">\n                <a\n                  data-uk-toggle={\"target: #\" + edge.node._id}\n                  className=\"uk-visible-toggle\"\n                  href={\"#\" + edge.node._id}\n                >\n                  <div style={{ position: \"relative\" }}>\n                    <GatsbyImage\n                      image={edge.node.img_url.childImageSharp.gatsbyImageData}\n                      alt={edge.node._id}\n                    />\n                    <div className=\"uk-light uk-overlay uk-overlay-primary uk-position-center uk-hidden-hover uk-animation-fade uk-animation-fast\">\n                      <p className=\"uk-animation-slide-bottom-small\">\n                        {edge.node.title}\n                      </p>\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </div>\n            <ProjectModal project={edge.node} />\n          </div>\n        ))}\n      </div>\n    </div>\n  </StyledSection>\n)\n\nconst ProjectModal = ({ project }) => (\n  <StyledModal id={project._id} data-uk-modal>\n    <div className=\"uk-modal-dialog\">\n      <button\n        className=\"uk-modal-close-default\"\n        aria-label=\"close-modal\"\n        type=\"button\"\n        data-uk-close\n      ></button>\n      <div className=\"uk-modal-header\">\n        {project.company && (\n          <h2 className=\"uk-modal-title\">{project.company}</h2>\n        )}\n      </div>\n      <div className=\"uk-modal-body\" data-uk-overflow-auto>\n        <ul className=\"uk-list\">\n          {project.checkmarks.map((text) => (\n            <li key={text}>\n              <span\n                data-uk-icon=\"icon: check; ratio: 1\"\n                className=\"uk-margin-small-right\"\n              ></span>\n              {text}\n            </li>\n          ))}\n        </ul>\n        {project.paragraphs &&\n          project.paragraphs.map((paragraph) => (\n            <blockquote key={paragraph.footer} cite=\"#\">\n              <p className=\"uk-margin-small-bottom\">{paragraph.text}</p>\n              <footer>{paragraph.footer}</footer>\n            </blockquote>\n          ))}\n        <div className=\"uk-text-center uk-margin-top\">[end]</div>\n      </div>\n    </div>\n  </StyledModal>\n)\n\nconst StyledModal = styled.div`\n  p {\n    font-style: normal;\n  }\n  li .uk-icon:not(.uk-preserve) [stroke*=\"#\"]:not(.uk-preserve) {\n    stroke: green;\n    stroke-width: 2;\n  }\n`\n\nconst StyledSection = styled.section``\n\nconst MyProjects = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allProjectsJson {\n          edges {\n            node {\n              _id\n              title\n              company\n              checkmarks\n              img_url {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH)\n                }\n              }\n              paragraphs {\n                text\n                footer\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <Projects data={data.allProjectsJson} {...props} />}\n  />\n)\n\nexport default MyProjects\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst Testimonials = ({ data }) => (\n  <StyledSection id=\"testimonials\" className=\"uk-section uk-section-muted\">\n    <div className=\"uk-container uk-text-center uk-container-xsmall\">\n      <h2>Testimonials</h2>\n      {data.edges.map((edge) => (\n        <div\n          key={edge.node.name}\n          className=\"uk-text-center uk-margin-large-bottom\"\n        >\n          <div className=\"uk-position-relative message\">{edge.node.text}</div>\n          <p>{edge.node.name}</p>\n        </div>\n      ))}\n    </div>\n  </StyledSection>\n)\n\nconst StyledSection = styled.section`\n  .message {\n    padding: 20px;\n    color: #666;\n    font-size: 16px;\n    background: #fff;\n    border: 1px solid #e6e6e6;\n    border-radius: 6px;\n  }\n\n  .message:after {\n    content: \"\";\n    width: 0;\n    height: 0;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -15px;\n    margin: auto;\n    border-left: 18px solid transparent;\n    border-right: 18px solid transparent;\n    border-top: 21px solid #fff;\n  }\n`\n\nconst MyProjects = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allTestimonialsJson {\n          edges {\n            node {\n              text\n              name\n              order\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <Testimonials data={data.allTestimonialsJson} {...props} />\n    )}\n  />\n)\n\nexport default MyProjects\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Techstack = ({ data }) => (\n  <StyledSection id=\"techstack\" className=\"uk-section uk-section-muted\">\n    <div className=\"uk-container uk-text-center\">\n      {data.edges.map((edge) => (\n        <GatsbyImage\n          key={edge.node.name}\n          image={\n            edge.node.img_url.childImageSharp.gatsbyImageData\n          }\n          alt={edge.node.name}\n          height=\"75px\"\n        />\n      ))}\n    </div>\n  </StyledSection>\n)\n\nconst StyledSection = styled.section`\n  img {\n    height: 75px;\n    width: auto;\n    padding: 10px;\n  }\n`\n\nconst MyTechstack = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allTechstackJson {\n          edges {\n            node {\n              name\n              img_url {\n                childImageSharp {\n                  gatsbyImageData(height: 75)\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <Techstack data={data.allTechstackJson} {...props} />\n    )}\n  />\n)\n\nexport default MyTechstack\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Certificates = ({ data }) => (\n  <StyledSection id=\"certificates\" className=\"uk-section\">\n    <div className=\"uk-container\">\n      <h2 className=\"uk-heading-divider uk-text-center\">Certificates</h2>\n      <div data-uk-slider=\"autoplay: true; autoplay-interval: 3000\">\n        <div className=\"uk-position-relative\" tabIndex=\"-1\">\n          <div className=\"uk-slider-container\">\n            <ul className=\"uk-slider-items uk-child-width-1-2 uk-child-width-1-3@m uk-grid\">\n              {data.edges.map((edge) => (\n                <li key={edge.node.title}>\n                  <div className=\"uk-card uk-card-default uk-text-center\">\n                    <div className=\"uk-card-media-top\">\n                      <GatsbyImage\n                        image={\n                          edge.node.img_url.childImageSharp.gatsbyImageData\n                        }\n                        alt={edge.node.title}\n                        height=\"150px\"\n                      />\n                    </div>\n                    <div className=\"uk-card-body\">\n                      <h3 className=\"uk-card-title\">{edge.node.title}</h3>\n                      { !edge.node.completed && <span className=\"uk-text-meta\">...in progress</span>}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <a\n            className=\"uk-position-center-left uk-position-small\"\n            href=\"#previous\"\n            rel=\"noopener nofollow\"\n            data-uk-slidenav-previous\n            data-uk-slider-item=\"previous\"\n            aria-label=\"previous\"\n          >\n            <span>previous</span>\n          </a>\n          <a\n            className=\"uk-position-center-right uk-position-small\"\n            href=\"#next\"\n            rel=\"noopener nofollow\"\n            data-uk-slidenav-next\n            data-uk-slider-item=\"next\"\n            aria-label=\"next\"\n          >\n            <span>next</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </StyledSection>\n)\n\nconst StyledSection = styled.section`\n  a span {\n    height: 1px;\n    width: 1px;\n    position: absolute;\n    overflow: hidden;\n    top: -10px;\n  }\n`\n\nconst MyCertificates = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allCertificatesJson {\n          edges {\n            node {\n              title\n              completed\n              img_url {\n                childImageSharp {\n                  gatsbyImageData(height: 150)\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <Certificates data={data.allCertificatesJson} {...props} />\n    )}\n  />\n)\n\nexport default MyCertificates\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Contact = () => {\n  const myHandler = (e) => {\n    const button = e.target\n    const span = e.target.nextSibling\n    button.style.display = \"none\"\n    span.style.display = \"block\"\n  }\n  return (\n    <StyledSection\n      id=\"contact\"\n      className=\"uk-section background-primary uk-light\"\n    >\n      <div className=\"uk-container uk-text-center\">\n        <button onClick={myHandler}>Contact</button>\n        <span>\n          <a href=\"mailto:robin@rtbprojects.com\">robin@rtbprojects.com</a>\n        </span>\n      </div>\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled.section`\n  span {\n    display: none;\n    margin-top: 2rem;\n    position: relative;\n    color: rgba(255, 255, 255, 0.5);\n  }\n\n  button {\n    padding: 1rem;\n    background-color: #2d3a4b;\n    border-radius: 5px;\n    color: white;\n    font-size: 1.5rem;\n  }\n\n  button:hover {\n    cursor: pointer;\n    background-color: #576980;\n  }\n\n  a {\n    text-decoration: underline;\n  }\n`\n\nexport default Contact\n","import React from \"react\"\n\nimport LayoutDefault from \"../layouts/default\"\nimport Seo from \"../components/seo\"\nimport Usps from \"../components/usps\"\n// import Demos from '../components/demos';\nimport Projects from \"../components/projects\"\nimport Testimonials from \"../components/testimonials\"\nimport Techstack from \"../components/techstack\"\nimport Certificates from \"../components/certificates\"\nimport Contact from \"../components/contact\"\n\nconst IndexPage = () => (\n  <LayoutDefault isHome>\n    <Seo title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Usps />\n    <Techstack />\n    <Projects />\n    {/* <Demos /> */}\n    <Testimonials />\n    <Certificates />\n    <Contact />\n  </LayoutDefault>\n)\n\nexport default IndexPage\n"],"names":["Usps","data","StyledSection","id","className","edges","map","edge","key","node","title","icon","list","text","styled","props","StaticQuery","query","render","allUspsJson","Projects","_id","href","style","position","G","image","img_url","childImageSharp","gatsbyImageData","alt","ProjectModal","project","StyledModal","type","company","checkmarks","paragraphs","paragraph","footer","cite","allProjectsJson","Testimonials","name","allTestimonialsJson","Techstack","height","allTechstackJson","Certificates","tabIndex","completed","rel","allCertificatesJson","onClick","e","button","target","span","nextSibling","display","isHome","keywords"],"sourceRoot":""}