{"version":3,"file":"519-9d7c991036bf1ed78174.js","mappings":"sMAKMA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,gBAACC,EAAD,CACEC,GAAG,WACHC,UAAU,mDAEV,uBAAKA,UAAU,+BACb,sBAAIA,UAAU,sBAAd,YACA,uBAAKA,UAAU,oEACZH,EAAKI,MAAMC,KAAI,SAACC,GAAD,OACd,uBAAKC,IAAKD,EAAKE,KAAKC,IAAKN,UAAU,iBACjC,uBAAK,oBAAkB,uDACrB,uBAAKA,UAAU,uBACb,qBACE,iBAAgB,YAAcG,EAAKE,KAAKC,IACxCN,UAAU,oBACVO,KAAM,IAAMJ,EAAKE,KAAKC,KAEtB,uBAAKE,MAAO,CAAEC,SAAU,aACtB,gBAAC,EAAAC,EAAD,CACEC,MAAOR,EAAKE,KAAKO,QAAQC,gBAAgBC,gBACzCC,IAAKZ,EAAKE,KAAKC,MAEjB,uBAAKN,UAAU,iHACb,qBAAGA,UAAU,mCACVG,EAAKE,KAAKW,YAOvB,gBAACC,EAAD,CAAcC,QAASf,EAAKE,eAQlCY,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,gBAACC,EAAD,CAAapB,GAAImB,EAAQZ,IAAK,oBAC5B,uBAAKN,UAAU,mBACb,0BACEA,UAAU,yBACV,aAAW,cACXoB,KAAK,SACL,qBAEF,uBAAKpB,UAAU,mBACZkB,EAAQG,SACP,sBAAIrB,UAAU,kBAAkBkB,EAAQG,UAG5C,uBAAKrB,UAAU,gBAAgB,4BAC7B,sBAAIA,UAAU,WACXkB,EAAQI,WAAWpB,KAAI,SAACqB,GAAD,OACtB,sBAAInB,IAAKmB,GACP,wBACE,eAAa,wBACbvB,UAAU,0BAEXuB,OAINL,EAAQM,YACPN,EAAQM,WAAWtB,KAAI,SAACuB,GAAD,OACrB,8BAAYrB,IAAKqB,EAAUC,OAAQC,KAAK,KACtC,qBAAG3B,UAAU,0BAA0ByB,EAAUF,MACjD,8BAASE,EAAUC,YAGzB,uBAAK1B,UAAU,gCAAf,aAMFmB,EAAcS,EAAAA,GAAAA,IAAH,+KAUX9B,EAAgB8B,EAAAA,GAAAA,QAAH,sBA+BnB,UA7BmB,SAACC,GAAD,OACjB,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAuBLC,OAAQ,SAACnC,GAAD,OAAU,gBAACD,EAAD,eAAUC,KAAMA,EAAKoC,iBAAqBJ","sources":["webpack://gatsby-starter-default/./src/components/projects.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Projects = ({ data }) => (\n  <StyledSection\n    id=\"projects\"\n    className=\"uk-section background-primary to-right uk-light\"\n  >\n    <div className=\"uk-container uk-text-center\">\n      <h2 className=\"uk-heading-divider\">Projects</h2>\n      <div className=\"uk-grid uk-child-width-1-1@s uk-child-width-1-3@m uk-text-center\">\n        {data.edges.map((edge) => (\n          <div key={edge.node._id} className=\"uk-margin-top\">\n            <div data-uk-scrollspy=\"cls: uk-animation-slide-bottom-medium; repeat: true\">\n              <div className=\"uk-animation-toggle\">\n                <a\n                  data-uk-toggle={\"target: #\" + edge.node._id}\n                  className=\"uk-visible-toggle\"\n                  href={\"#\" + edge.node._id}\n                >\n                  <div style={{ position: \"relative\" }}>\n                    <GatsbyImage\n                      image={edge.node.img_url.childImageSharp.gatsbyImageData}\n                      alt={edge.node._id}\n                    />\n                    <div className=\"uk-light uk-overlay uk-overlay-primary uk-position-center uk-hidden-hover uk-animation-fade uk-animation-fast\">\n                      <p className=\"uk-animation-slide-bottom-small\">\n                        {edge.node.title}\n                      </p>\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </div>\n            <ProjectModal project={edge.node} />\n          </div>\n        ))}\n      </div>\n    </div>\n  </StyledSection>\n)\n\nconst ProjectModal = ({ project }) => (\n  <StyledModal id={project._id} data-uk-modal>\n    <div className=\"uk-modal-dialog\">\n      <button\n        className=\"uk-modal-close-default\"\n        aria-label=\"close-modal\"\n        type=\"button\"\n        data-uk-close\n      ></button>\n      <div className=\"uk-modal-header\">\n        {project.company && (\n          <h2 className=\"uk-modal-title\">{project.company}</h2>\n        )}\n      </div>\n      <div className=\"uk-modal-body\" data-uk-overflow-auto>\n        <ul className=\"uk-list\">\n          {project.checkmarks.map((text) => (\n            <li key={text}>\n              <span\n                data-uk-icon=\"icon: check; ratio: 1\"\n                className=\"uk-margin-small-right\"\n              ></span>\n              {text}\n            </li>\n          ))}\n        </ul>\n        {project.paragraphs &&\n          project.paragraphs.map((paragraph) => (\n            <blockquote key={paragraph.footer} cite=\"#\">\n              <p className=\"uk-margin-small-bottom\">{paragraph.text}</p>\n              <footer>{paragraph.footer}</footer>\n            </blockquote>\n          ))}\n        <div className=\"uk-text-center uk-margin-top\">[end]</div>\n      </div>\n    </div>\n  </StyledModal>\n)\n\nconst StyledModal = styled.div`\n  p {\n    font-style: normal;\n  }\n  li .uk-icon:not(.uk-preserve) [stroke*=\"#\"]:not(.uk-preserve) {\n    stroke: green;\n    stroke-width: 2;\n  }\n`\n\nconst StyledSection = styled.section``\n\nconst MyProjects = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allProjectsJson {\n          edges {\n            node {\n              _id\n              title\n              company\n              checkmarks\n              img_url {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH)\n                }\n              }\n              paragraphs {\n                text\n                footer\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <Projects data={data.allProjectsJson} {...props} />}\n  />\n)\n\nexport default MyProjects\n"],"names":["Projects","data","StyledSection","id","className","edges","map","edge","key","node","_id","href","style","position","G","image","img_url","childImageSharp","gatsbyImageData","alt","title","ProjectModal","project","StyledModal","type","company","checkmarks","text","paragraphs","paragraph","footer","cite","styled","props","StaticQuery","query","render","allProjectsJson"],"sourceRoot":""}